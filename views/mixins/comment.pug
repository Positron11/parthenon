mixin Comment(comment)
	.Comment(id=comment._id)
		//- comment content wrapper
		.content.Flexbox.mColumn
			//- comment author and date
			.header.Flexbox
				.author.tDisplay= comment.author.username
				- var date = new Date(comment.updated_date);
				.date= `${date.toLocaleTimeString("en-us", { hour: "numeric", minute: "numeric" })} on ${date.toLocaleDateString("en-us", { year:"numeric", month:"long", day:"numeric"})}`

			//- comment content
			.body!= comment.renderContent()

		//- comment edit form
		form.editForm(action=`/writings/${article.slug}/comment/${comment._id}/edit`, method="post").internalCommentForm.Flexbox.mColumn.mMinimalSpacing 
			textarea(name="content", rows="1", required="true")!= comment.content
			.Flexbox.mRightAlign: button(type="submit") Edit

		//- action buttons
		.actions.Flexbox.mInline.mMinimalSpacing 
			if !user
				//- dummy reply button
				a(href=`/login?next=${url}`): img(src="/images/icons/reply.svg")
			else 
				//- reply button
				img(src="/images/icons/reply.svg", onclick=`toggleCommentForm(this, 'Reply'); document.getElementById('${comment._id}').scrollIntoView();`).mClickable
				//- edit button
				if user._id.equals(comment.author._id)
					img(src="/images/icons/edit.svg", onclick=`toggleCommentForm(this, 'Edit'); document.getElementById('${comment._id}').scrollIntoView();`).mClickable
				//- delete form
				if user._id.equals(comment.author._id) || user.roles.includes("superuser")
					form.deleteForm(action=`/writings/${article.slug}/comment/${comment._id}/delete`, method="post")
						button(type="submit").mDiscreet: img(src="/images/icons/trash.svg")
			//- copy link
			img(src="/images/icons/copy_link.svg", onclick=`copyToClipboard("${protocol}://${host}${url}#${comment._id}")`).mClickable

		//- comment replies wrapper
		.replies(class=comment.replies.length ? null : "sEmpty").Flexbox.mColumn.mCompactSpacing
			//- reply form
			if user
				form.replyForm(action=`/writings/${article.slug}/comment/create`, method="post").internalCommentForm.Flexbox.mColumn.mMinimalSpacing
					//- parent metadata
					input(type="hidden", name="article", value=comment.article)
					input(type="hidden", name="parent", value=comment._id)

					//- reply metadata
					input(type="hidden", name="author", value=user._id)

					//- reply content field
					textarea(name="content", rows="2", required="true")
					.Flexbox.mSpaceBetween.mVerticallyCenter
						//- action dialog
						.tSmall.tGray.uSingleLineText Write a reply to John Doe.
						button(type="submit") Reply

			//- reply tree
			for reply in comment.replies 
				+Comment(reply)